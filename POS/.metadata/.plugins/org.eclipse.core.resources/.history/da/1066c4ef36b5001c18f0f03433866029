package hw5;

import hw4.graph;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

import hw4.edge;


public class MarvelPaths {
	

	private graph graph;
	
	public MarvelPaths() {
		graph = new graph();
	}
	
	public void createGraph(String file) {
		Map<String, Set<String>> charsInBooks = new HashMap<String, Set<String>>();
		Set<String> chars = new HashSet<String>();
		try {
			MarvelParser.readData(file, charsInBooks, chars);
			for( String c : chars) {
				graph.addNode(c);
			}
			Iterator<String> iterator = charsInBooks.keySet().iterator();
			while(iterator.hasNext()) {
				String temp = iterator.next();
				Set<String> one = new HashSet<String>();
				Set<String> two = new HashSet<String>();
				one=charsInBooks.get(temp);
				two=charsInBooks.get(temp);
				for(String first: one) {
					for(String second: two) {
						if(!(first.equals(second))) {
							graph.addEdge(first, second, temp);
						}
					}
				}
			}
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	public Iterator<String> list(String parent){
		Iterator<edge> iterator = graph.listChildren(parent);

		ArrayList<String> Childs = new ArrayList<String>();
		while(iterator.hasNext())
		{
			Childs.add(iterator.next().print());
		}
		Collections.sort(Childs);
		return Childs.iterator();
	
	}
	
	
	
	public static void main(String[] arg) {
		String file = arg[0];
		MarvelPaths mp = new MarvelPaths();
			mp.createGraph(file);
			System.out.println("Constructed the graph.\n");
			Iterator<String> iterator = mp.list("THORSON, DR. WALTER");
			int x = 0;
			while(iterator.hasNext()) {
				System.out.println(iterator.next());
				x++;
			}
			System.out.print(x);
	}
	
}


